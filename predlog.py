from .. import loader
import asyncio
import logging
from aiogram import types
from aiogram.types import Message
from aiogram.utils.exceptions import TelegramAPIError

logger = logging.getLogger(__name__)

@loader.tds
class ExternalBotForwarder(loader.Module):
    """–ë–æ—Ç-–ø—Ä–µ–¥–ª–æ–∂–∫–∞: –ø—Ä–∏–Ω–∏–º–∞–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏—è –∏ –ø–µ—Ä–µ—Å—ã–ª–∞–µ—Ç –≤ –∫–∞–Ω–∞–ª"""
    strings = {"name": "OfferForwardBot"}

    def __init__(self):
        self._target_chat = None
        self.db = None

    async def client_ready(self, client, db):
        self.db = db
        self._bot = client  # –ò—Å–ø–æ–ª—å–∑—É–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π –∫–ª–∏–µ–Ω—Ç –∏–∑ loader
        target_chat = self.db.get("OfferForwardBot", "target", "-1002630066044")
        self._target_chat = int(target_chat)

        # –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å–æ–æ–±—â–µ–Ω–∏–π –æ—Ç –ª—é–±—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
        @self._bot.on(types.Message)
        async def forward_to_channel(message: Message):
            try:
                username = message.from_user.username or f"id{message.from_user.id}"
                prefix = f"<b>üì© –ù–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç @{username}:</b>\n\n"

                if message.photo:
                    await self._bot.send_photo(
                        chat_id=self._target_chat,
                        photo=message.photo[-1].file_id,
                        caption=prefix + (message.caption or ""),
                        parse_mode="HTML"
                    )
                elif message.audio:
                    await self._bot.send_audio(
                        chat_id=self._target_chat,
                        audio=message.audio.file_id,
                        caption=prefix + (message.caption or ""),
                        parse_mode="HTML"
                    )
                elif message.voice:
                    await self._bot.send_voice(
                        chat_id=self._target_chat,
                        voice=message.voice.file_id,
                        caption=prefix + (message.caption or ""),
                        parse_mode="HTML"
                    )
                elif message.video:
                    await self._bot.send_video(
                        chat_id=self._target_chat,
                        video=message.video.file_id,
                        caption=prefix + (message.caption or ""),
                        parse_mode="HTML"
                    )
                elif message.text:
                    await self._bot.send_message(
                        chat_id=self._target_chat,
                        text=prefix + message.text,
                        parse_mode="HTML"
                    )
                else:
                    await self._bot.send_message(
                        chat_id=self._target_chat,
                        text=prefix + "üìé –ü–æ–ª—É—á–µ–Ω–æ –Ω–µ–ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ.",
                        parse_mode="HTML"
                    )

                await message.reply("‚úÖ –í–∞—à–µ –æ–±—ä—è–≤–ª–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ.\n–°–∫–æ—Ä–æ –æ–Ω–æ –ø–æ—è–≤–∏—Ç—Å—è –≤ –∫–∞–Ω–∞–ª–µ.")

            except TelegramAPIError as e:
                logger.error(f"–û—à–∏–±–∫–∞ –ø–µ—Ä–µ—Å—ã–ª–∫–∏: {e}")
                await message.reply("‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.")

    async def setoffertokencmd(self, message):
        """–£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å —Ç–æ–∫–µ–Ω –≤–Ω–µ—à–Ω–µ–≥–æ –±–æ—Ç–∞ (–Ω–µ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –≤ —Ç–µ–∫—É—â–µ–π –≤–µ—Ä—Å–∏–∏)"""
        await message.edit("‚ùå –í —ç—Ç–æ–π –≤–µ—Ä—Å–∏–∏ –º–æ–¥—É–ª—å –∏—Å–ø–æ–ª—å–∑—É–µ—Ç —Ç–µ–∫—É—â–∏–π –∫–ª–∏–µ–Ω—Ç, —É—Å—Ç–∞–Ω–æ–≤–∫–∞ —Ç–æ–∫–µ–Ω–∞ –Ω–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç—Å—è.")

    async def setofferchatcmd(self, message):
        """–£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å ID –∫–∞–Ω–∞–ª–∞/—á–∞—Ç–∞ –¥–ª—è –ø–µ—Ä–µ—Å—ã–ª–∫–∏"""
        chat = message.text.split(maxsplit=1)[1] if len(message.text.split()) > 1 else None
        if not chat:
            await message.edit("‚ùå –£–∫–∞–∂–∏ ID —á–∞—Ç–∞ (–Ω–∞–ø—Ä–∏–º–µ—Ä, -1001234567890)")
            return
        self.db.set("OfferForwardBot", "target", chat)
        self._target_chat = int(chat)
        await message.edit("‚úÖ ID —á–∞—Ç–∞ —Å–æ—Ö—Ä–∞–Ω—ë–Ω.")
